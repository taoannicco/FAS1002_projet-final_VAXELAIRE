{
  "hash": "0608a18f1348bb7ecb1d1588d55aa0dc",
  "result": {
    "markdown": "---\ntitle: \"Visualisations\"\ncolortheme: \"#FAA219\"\ntitle-block-banner: false\ndescription: | \n  Présentation des données via quelques visualistaions.\n# à changer\ndate: \"2022-12-21\"\n# Modifier les détails que vous voulez\nauthor:\n  - name: \"Nicolas Vaxelaire\"\n    # Votre site web perso ou github\n    url: https://github.com/taoannicco\n    # les champs d'affiliation sont optionnels, vous pouvez les\n    # comment out en ajoutant un # devant.\n    affiliation: FAS1002\n    affiliation-url: https://FAS1002.github.io/A22\n    # changer pour votre propre orcid id\n    # https://orcid.org/ pour vous inscrire.\n    orcid: 0000-0000-0000-0000\n\n# TRUE == Générer une citation pour cette page précise. Pour enlever, mettre false.\ncitation: true\n# Inclure les références que vous utilisez dans vos rapports. Je conseille Zotero pour construire\n# ce fichier ou de connecter RStudio directement pour pouvoir citer avec @nom-de-reference.\nbibliography: references.bib\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(googlesheets4)\nlibrary(readxl)\nlibrary(lubridate)\nlibrary(magrittr)\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(rgdal)\nlibrary(rmapshaper)\nlibrary(sp)\nlibrary(sf)\nlibrary(broom)\nlibrary(maps)\nlibrary(rworldmap)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(gridBase)\nlibrary(lessR)\nlibrary(ggrepel)\n```\n:::\n\n\n## Graphique 1 :\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_life <- read_sheet(\"https://docs.google.com/spreadsheets/d/1RheSon1-q4vFc3AGyupVPH6ptEByE-VtnjOCselU0PE/edit#gid=176703676\", sheet = 4)\ncolnames(data_life) <- c(\"country_code\",\"country\",\"annee\",\"esperance_de_vie\")\n\ngap_tsv <- system.file(\"extdata\", \"gapminder.tsv\", package = \"gapminder\")\ntable_continent <- read.delim(gap_tsv)\nstr(table_continent)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t1704 obs. of  6 variables:\n $ country  : chr  \"Afghanistan\" \"Afghanistan\" \"Afghanistan\" \"Afghanistan\" ...\n $ continent: chr  \"Asia\" \"Asia\" \"Asia\" \"Asia\" ...\n $ year     : int  1952 1957 1962 1967 1972 1977 1982 1987 1992 1997 ...\n $ lifeExp  : num  28.8 30.3 32 34 36.1 ...\n $ pop      : int  8425333 9240934 10267083 11537966 13079460 14880372 12881816 13867957 16317921 22227415 ...\n $ gdpPercap: num  779 821 853 836 740 ...\n```\n:::\n\n```{.r .cell-code}\ntable_continent <- table_continent[,c( \"country\", \"continent\")]\n\ndata_life <- left_join(table_continent, data_life, by = \"country\")\neurope_data <- data_life |>\n    filter(continent == \"Europe\")\neurope_data <- europe_data |> \n    filter(annee >= 2022)\n\n\neurope_data <- europe_data |> \n    distinct(esperance_de_vie, country, annee, country_code)\ngraphique1 <- ggplot(data = europe_data, mapping = aes(x = annee, y = esperance_de_vie, color = country, group = country))+geom_jitter(size = .4)\ngraphique1 +\n    labs(\n        x = \"\",\n    y = \"Espérance de vie \",\n    title = \"Prédictions des espérances de vie en Europe\"\n  ) +\n  theme_classic()+\n  theme(legend.position = \"bottom\")+\n  theme(plot.background=element_rect(fill = \"#012b36\"),\n        legend.background = element_rect(fill = \"#012b36\", color = NA),\n         panel.background = element_rect(fill = \"#012b36\"),\n  plot.title = element_text(hjust = 0.5, color = \"#ACB6BD\"))+\n  theme(axis.text = element_text(colour = \"#ACB6BD\"))+\n  theme(plot.background=element_rect(fill = \"#012b36\"))+\n    theme(axis.line = element_line(colour = \"#ACB6BD\"))+\n    theme(axis.text.x = element_text(colour = \"#ACB6BD\"))+\n    theme(axis.title.y  = element_text(colour = \"#ACB6BD\"))\n```\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nIl y aura une hausse des espérances de vie européenne selon les prédictions selon l'organisme Gapminder. Ce graphique aide à visualiser cette tendance sans pour autant tenter d'entrer dans les détails. \n\n\n## Carte\n\n\n::: {.cell}\n\n```{.r .cell-code}\neurope <- readOGR(dsn = \"NUTS_RG_20M_2021_3035.shp\",\n                  layer = \"NUTS_RG_20M_2021_3035\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOGR data source with driver: ESRI Shapefile \nSource: \"/Users/nicolasvaxelaire/FAS1002_projet-final/NUTS_RG_20M_2021_3035.shp\", layer: \"NUTS_RG_20M_2021_3035\"\nwith 2010 features\nIt has 9 fields\n```\n:::\n\n```{.r .cell-code}\neuropean_table <- tidy(x = europe, region = \"CNTR_CODE\")\ncolnames(european_table) <- c(\"long\",\"lat\",\"order\",\"hole\",\"piece\",\"group\",\"pays\")\n\neurope_carte <- ggplot(data = european_table, aes(x = long, y = lat, group = group))+ \n  geom_polygon()+\n  ylim(1000000, 5500000)+\n  xlim(2000000,7500000)+\n  theme_void()\neurope_data <- data_life |>\n    filter(continent == \"Europe\")\neurope_data <- europe_data |> \n    filter(annee == 2022)\n\n\neurope_data <- europe_data |> \n    distinct(esperance_de_vie, country, annee, country_code)\n\nesperance_2022 <- europe_data\ncolnames(esperance_2022) <- c(\"country_name\",\"country_code\",\"Annee\",\"esperance_de_vie\")\n\ncountry_totals <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/country_totals.csv')\ntable_pays <- country_totals[,c( \"country\", \"country_name\")]\ncolnames(table_pays) <- c(\"country_code\",\"country_name\")\ncolnames(european_table) <- c(\"long\",\"lat\",\"order\",\"hole\",\"piece\",\"group\",\"country_code\")\n\n\n\neurope <- left_join(european_table,table_pays, by = \"country_code\")\neurope <- left_join(europe, esperance_2022, by =\"country_name\")\n\neurope_carte <- ggplot(data = europe, aes(x = long, y = lat, group = group))+ \n  geom_polygon(aes(fill = esperance_de_vie))+\n  ylim(1000000, 5500000)+\n  xlim(2000000,7500000)+\n  theme_void()+\n  scale_fill_viridis_c(option = \"plasma\")+\n  theme(plot.background=element_rect(fill = \"#012b36\"))\n\neurope_carte\n```\n\n::: {.cell-output-display}\n![](exploration_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nGrâce aux données géospatiales libres d'accès d'Eurostat, il est possible de créer une carte des pays de l'Union européenne. Afin de lier les données de Gapminder et celles d'Eurostat, on utilise une banque de cette dernière pour avoir accès aux codes des pays selon leur noms.\n\n------------------------------------------------------------------------\n",
    "supporting": [
      "exploration_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}