{
  "hash": "a04cb2264578ed07e0031d5fcd2defb0",
  "result": {
    "markdown": "---\ntitle: \"Importer\"\ntitle-block-banner: true\ndescription: | \n  importation des 3 jeux de données.\n\ndate: \"2023-01-08\"\n\nauthor:\n  - name: \"Nicolas Vaxelaire\"\n    url: https://github.com/taoannicco\n    affiliation: FAS1002\n    affiliation-url: https://FAS1002.github.io/A22\n\ncitation: true\n# Inclure les références que vous utilisez dans vos rapports. Je conseille Zotero pour construire\n# ce fichier ou de connecter RStudio directement pour pouvoir citer avec @nom-de-reference.\nbibliography: references.bib\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(googlesheets4)\nlibrary(readxl)\nlibrary(lubridate)\nlibrary(magrittr)\nlibrary(tidyverse)\nlibrary(dplyr)\n```\n:::\n\n\n## Ce fichier permet de télécharger les données brutes mais aussi de les actualiser.\n\n### Téléchargement des données de Gapminder :\n\nOn s'intéresse plus particulièrement à *l'espérance de vie* par pays à travers les années, la 4ème table du google sheet. Il faut tout d'abord se connecter via google pour ce type de document. Voici le code R afin d'utiliser un google sheet :\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#googlesheets4::gs4_find()\n```\n:::\n\n\nLes données de cette source seront actualisées mensuellement.\n\n::: callout-important\nLa première étape est cruciale pour l'actualisation des données mais ne doit pas être répétée.\n:::\n\non crée un premier mois de référence et une première année de référence **Une fois fait, il ne faut JAMAIS répéter cette action.** Un message indiquera la statut de mise à jour des données.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# étape cruciale afin d'établir une référence pour l'actualisation date du LUNDI 21 DÉCEMBRE 2022\nmois_ref <- 12\nan_ref <- 2022\njour_ref <- 21L\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# trouver la date du téléchargement\ntoday <- Sys.Date()\ndate <- today\nmois <- month(date)\nan <- year(date)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nif (mois != mois_ref) {    #téléchargement pour tous les mois sauf celui de référénce\n    data_life <- read_sheet(\"https://docs.google.com/spreadsheets/d/1RheSon1-q4vFc3AGyupVPH6ptEByE-VtnjOCselU0PE/edit#gid=176703676\", sheet = 4)\n    \n    mois_ref <- mois # le mois de référence devient le mois actuel\n    print(\"Les données sont à jour\") \n    } else if (an != an_ref) { #téléchargement pour les prochains mois des autres années si jamais mois de référence = mois actuel\n    data_life <- read_sheet(\"https://docs.google.com/spreadsheets/d/1RheSon1-q4vFc3AGyupVPH6ptEByE-VtnjOCselU0PE/edit#gid=176703676\", sheet = 4)\n    print(\"Les données sont à jour\") \n    } else { \n    print(\"Les données sont déjà à jour\") \n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n! Using an auto-discovered, cached token.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n  To suppress this message, modify your code or options to clearly consent to\n  the use of a cached token.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n  See gargle's \"Non-interactive auth\" vignette for more details:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n  <https://gargle.r-lib.org/articles/non-interactive-auth.html>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nℹ The googlesheets4 package is using a cached token for\n  'vaxelairenico@gmail.com'.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ Reading from \"_GM-Life Expectancy- Dataset - v12\".\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ Range ''data-for-countries-etc-by-year''.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Les données sont à jour\"\n```\n:::\n:::\n\n\n## Téléchargement des données de Our world in data (mise à jour quotidienne)\n\n### Banque 'Energy' **(sur github en format CSV) :**\n\n\n::: {.cell}\n\n```{.r .cell-code}\njour <- day(today)\n\nif (jour != jour_ref) {    #téléchargement pour tous les mois sauf celui de référénce\n    data_energy <- read.csv(\"https://nyc3.digitaloceanspaces.com/owid-public/data/energy/owid-energy-data.csv\")\n    jour_ref <- jour # le mois de rééférence devient le mois actuel\n    print(\"Les données sont à jour.\") \n    } else if (an != an_ref) { #téléchargement pour les prochains mois de décembre\n    data_energy <- read.csv(\"https://nyc3.digitaloceanspaces.com/owid-public/data/energy/owid-energy-data.csv\")\n    print(\"Les données sont à jour\") \n    } else { \n    print(\"Les données sont déjà à jour\") \n    }\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Les données sont à jour.\"\n```\n:::\n:::\n\n\n### Banque 'CO2' **(sur github en format CSV):**\n\n\n::: {.cell}\n\n```{.r .cell-code}\njour <- day(today)\n\nif (jour != jour_ref) {    #téléchargement pour tous les mois sauf celui de référénce\n    data_carbon <- read.csv(\"https://nyc3.digitaloceanspaces.com/owid-public/data/co2/owid-co2-data.csv\")\n    jour_ref <- jour # le mois de rééférence devient le mois actuel\n    print(\"Les données sont à jour.\") \n    } else if (an != an_ref) { #téléchargement pour les prochains mois de décembre\n    data_carbon <- read.csv(\"https://nyc3.digitaloceanspaces.com/owid-public/data/co2/owid-co2-data.csv\")\n    print(\"Les données sont à jour\") \n    } else { \n    print(\"Les données sont déjà à jour\") \n    }\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Les données sont à jour\"\n```\n:::\n:::\n\n\n> Les données proviennent entre autres de @owidenergy.\n\n> les packages proviennent de : Jennifer Bryan, Hadley Wickham, Garrett Grolemund, Stefan Milton Bache, Romain François, Lionel Henry,Kirill Müller\n",
    "supporting": [
      "import_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}